{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Business-Directory/frontend/src/app/landing/page.tsx"],"sourcesContent":["\"use client\";\r\nimport React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Image from \"next/image\";\r\nimport FilterSidebar from '../components/FilterSidebar';\r\nimport SearchBar from '../components/SearchBar';\r\n\r\ninterface Business {\r\n  _id: string;\r\n  name: string;\r\n  category: string;\r\n  description: string;\r\n  owner: { username: string };\r\n  location: { address: string; state: string };\r\n}\r\n\r\ninterface Props {\r\n  filters: any;\r\n  setFilters: (filters: any) => void;\r\n  onApply: (filters: any) => void;\r\n}\r\n\r\ninterface Props {\r\n  searchTerm: string;\r\n  setSearchTerm: (term: string) => void;\r\n  onSearch: (term: string) => void;\r\n}\r\n\r\n\r\nconst ITEMS_PER_PAGE = 9;\r\n\r\nexport default function Landing() {\r\n  const [businesses, setBusinesses] = useState<Business[]>([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const [filters, setFilters] = useState({});\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  const fetchBusinesses = async (page: number, filters = {}, search = \"\") => {\r\n    try {\r\n      const params = new URLSearchParams({\r\n        page: page.toString(),\r\n        limit: ITEMS_PER_PAGE.toString(),\r\n        ...filters,\r\n      });\r\n  \r\n      if (search) params.set(\"name\", search); // search term becomes name filter\r\n  \r\n      const res = await fetch(`http://localhost:5000/api/business/viewBizs?${params.toString()}`);\r\n      const data = await res.json();\r\n  \r\n      setBusinesses(data.businesses);\r\n      setTotalPages(data.totalPages);\r\n    } catch (err) {\r\n      console.error(\"Error fetching businesses:\", err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchBusinesses(currentPage);\r\n  }, [currentPage]);\r\n\r\n  return (\r\n    <main className=\"p-6\">\r\n\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n        {businesses.map((biz) => (\r\n          <div key={biz._id} className=\"border rounded-lg shadow-md bg-white overflow-hidden\">\r\n            <Image\r\n              src=\"/default-banner-img.png\"\r\n              alt={`${biz.name} banner`}\r\n              width={600}\r\n              height={200}\r\n              className=\"w-full h-40 object-cover\"\r\n              priority\r\n            />\r\n            <div className=\"p-4 flex items-start gap-4\">\r\n              <Image\r\n                src=\"/default-logo.png\"\r\n                alt={`${biz.name} logo`}\r\n                width={64}\r\n                height={64}\r\n                className=\"rounded-full object-cover\"\r\n              />\r\n              <div>\r\n                <h2 className=\"text-xl text-zinc-800 font-semibold\">{biz.name}</h2>\r\n                <p className=\"text-sm text-gray-500\">{biz.category}</p>\r\n                <p className=\"text-gray-700 mt-1\">{biz.description}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Pagination Controls */}\r\n      <div className=\"flex justify-center mt-8 gap-4\">\r\n        <button\r\n          onClick={() => setCurrentPage((prev) => Math.max(prev - 1, 1))}\r\n          disabled={currentPage === 1}\r\n          className=\"px-4 py-2 bg-gray-200 rounded disabled:opacity-50 text-zinc-800\"\r\n        >\r\n          Previous\r\n        </button>\r\n        <span className=\"text-lg font-medium\">\r\n          Page {currentPage} of {totalPages}\r\n        </span>\r\n        <button\r\n          onClick={() => setCurrentPage((prev) => Math.min(prev + 1, totalPages))}\r\n          disabled={currentPage === totalPages}\r\n          className=\"px-4 py-2 bg-gray-200 rounded disabled:opacity-50 text-zinc-800\"\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AA6BA,MAAM,iBAAiB;AAER,SAAS;;IACtB,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAc,EAAE;IAC3D,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,CAAC;IACxC,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,MAAM,kBAAkB,OAAO,MAAc,UAAU,CAAC,CAAC,EAAE,SAAS,EAAE;QACpE,IAAI;YACF,MAAM,SAAS,IAAI,gBAAgB;gBACjC,MAAM,KAAK,QAAQ;gBACnB,OAAO,eAAe,QAAQ;gBAC9B,GAAG,OAAO;YACZ;YAEA,IAAI,QAAQ,OAAO,GAAG,CAAC,QAAQ,SAAS,kCAAkC;YAE1E,MAAM,MAAM,MAAM,MAAM,CAAC,4CAA4C,EAAE,OAAO,QAAQ,IAAI;YAC1F,MAAM,OAAO,MAAM,IAAI,IAAI;YAE3B,cAAc,KAAK,UAAU;YAC7B,cAAc,KAAK,UAAU;QAC/B,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,8BAA8B;QAC9C;IACF;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;6BAAE;YACR,gBAAgB;QAClB;4BAAG;QAAC;KAAY;IAEhB,qBACE,6LAAC;QAAK,WAAU;;0BAEd,6LAAC;gBAAI,WAAU;0BACZ,WAAW,GAAG,CAAC,CAAC,oBACf,6LAAC;wBAAkB,WAAU;;0CAC3B,6LAAC,gIAAA,CAAA,UAAK;gCACJ,KAAI;gCACJ,KAAK,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC;gCACzB,OAAO;gCACP,QAAQ;gCACR,WAAU;gCACV,QAAQ;;;;;;0CAEV,6LAAC;gCAAI,WAAU;;kDACb,6LAAC,gIAAA,CAAA,UAAK;wCACJ,KAAI;wCACJ,KAAK,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC;wCACvB,OAAO;wCACP,QAAQ;wCACR,WAAU;;;;;;kDAEZ,6LAAC;;0DACC,6LAAC;gDAAG,WAAU;0DAAuC,IAAI,IAAI;;;;;;0DAC7D,6LAAC;gDAAE,WAAU;0DAAyB,IAAI,QAAQ;;;;;;0DAClD,6LAAC;gDAAE,WAAU;0DAAsB,IAAI,WAAW;;;;;;;;;;;;;;;;;;;uBApB9C,IAAI,GAAG;;;;;;;;;;0BA4BrB,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBACC,SAAS,IAAM,eAAe,CAAC,OAAS,KAAK,GAAG,CAAC,OAAO,GAAG;wBAC3D,UAAU,gBAAgB;wBAC1B,WAAU;kCACX;;;;;;kCAGD,6LAAC;wBAAK,WAAU;;4BAAsB;4BAC9B;4BAAY;4BAAK;;;;;;;kCAEzB,6LAAC;wBACC,SAAS,IAAM,eAAe,CAAC,OAAS,KAAK,GAAG,CAAC,OAAO,GAAG;wBAC3D,UAAU,gBAAgB;wBAC1B,WAAU;kCACX;;;;;;;;;;;;;;;;;;AAMT;GArFwB;KAAA","debugId":null}}]
}